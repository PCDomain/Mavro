{"version":3,"sources":["components/Header.js","components/TaskList.js","components/TaskForm.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","createElement","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","TaskList","_ref","tasks","startEditTask","deleteTask","toggleTaskCompletion","map","task","Card","key","style","marginBottom","Body","Form","Check","type","label","title","checked","completed","onChange","textDecoration","Text","description","Button","onClick","marginLeft","TaskForm","addTask","editTask","taskToEdit","setTitle","useState","setDescription","setCompleted","useEffect","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","value","target","as","rows","Footer","Container","App","setTasks","setTaskToEdit","filter","setFilter","filteredTasks","Row","Col","md","Date","now","updatedTask","ButtonGroup","aria-label","taskId","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ce7e53d8.chunk.js","sourcesContent":["// src/components/Header.js\nimport React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nconst Header = () => {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand href=\"#\">Task Manager</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\n                    <Nav.Link href=\"#tasks\">Tasks</Nav.Link>\n                    <Nav.Link href=\"#projects\">Projects</Nav.Link>\n                </Nav>\n                <Nav>\n                    <Nav.Link href=\"#login\">Login</Nav.Link>\n                    <Nav.Link href=\"#signup\">Sign Up</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Card, Button, Form } from 'react-bootstrap';\n\nconst TaskList = ({ tasks, startEditTask, deleteTask, toggleTaskCompletion }) => {\n  return (\n    <div className=\"task-list\">\n      {tasks.map((task) => (\n        <Card key={task.id} style={{ marginBottom: '10px' }}>\n          <Card.Body>\n            <Form.Check\n              type=\"checkbox\"\n              label={task.title}\n              checked={task.completed}\n              onChange={() => toggleTaskCompletion(task.id)}\n              style={{ textDecoration: task.completed ? 'line-through' : 'none' }}\n            />\n            <Card.Text>{task.description}</Card.Text>\n            <Button variant=\"primary\" onClick={() => startEditTask(task)}>Edit</Button>\n            <Button variant=\"danger\" style={{ marginLeft: '10px' }} onClick={() => deleteTask(task.id)}>Delete</Button>\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst TaskForm = ({ addTask, editTask, taskToEdit }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [completed, setCompleted] = useState(false);\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCompleted(taskToEdit.completed);\n    }\n  }, [taskToEdit]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (taskToEdit) {\n      editTask({ ...taskToEdit, title, description, completed });\n    } else {\n      addTask({ title, description, completed });\n    }\n    setTitle('');\n    setDescription('');\n    setCompleted(false);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formTaskTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter task title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formTaskDescription\">\n        <Form.Label>Description</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={3}\n          placeholder=\"Enter task description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formTaskCompleted\">\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Completed\"\n          checked={completed}\n          onChange={(e) => setCompleted(e.target.checked)}\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        {taskToEdit ? 'Update Task' : 'Add Task'}\n      </Button>\n    </Form>\n  );\n};\n\nexport default TaskForm;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-dark text-white mt-4\">\n      <Container className=\"text-center py-3\">\n        Â© 2024 Task Manager. All rights reserved.\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport Footer from './components/Footer';\nimport { Container, Row, Col, ButtonGroup, Button } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [filter, setFilter] = useState('all');\n\n  const addTask = (task) => {\n    setTasks([...tasks, { ...task, id: Date.now() }]);\n  };\n\n  const editTask = (updatedTask) => {\n    setTasks(tasks.map(task => (task.id === updatedTask.id ? updatedTask : task)));\n    setTaskToEdit(null);\n  };\n\n  const deleteTask = (taskId) => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  const startEditTask = (task) => {\n    setTaskToEdit(task);\n  };\n\n  const toggleTaskCompletion = (taskId) => {\n    setTasks(tasks.map(task => (task.id === taskId ? { ...task, completed: !task.completed } : task)));\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'pending') return !task.completed;\n    return true;\n  });\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"mt-4\">\n        <Row>\n          <Col md={6}>\n            <TaskForm addTask={addTask} editTask={editTask} taskToEdit={taskToEdit} />\n          </Col>\n          <Col md={6}>\n            <ButtonGroup aria-label=\"Basic example\" className=\"mb-3\">\n              <Button variant=\"secondary\" onClick={() => setFilter('all')}>All</Button>\n              <Button variant=\"secondary\" onClick={() => setFilter('completed')}>Completed</Button>\n              <Button variant=\"secondary\" onClick={() => setFilter('pending')}>Pending</Button>\n            </ButtonGroup>\n            <TaskList tasks={filteredTasks} startEditTask={startEditTask} deleteTask={deleteTask} toggleTaskCompletion={toggleTaskCompletion} />\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}